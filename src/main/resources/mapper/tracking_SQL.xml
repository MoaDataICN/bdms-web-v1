<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="tracking">
	<select id="selectMaxReqId"  parameterType="String" resultType="String">
		SELECT (CASE WHEN IFNULL(MAX(REQ_ID),0) = '0'
						 then (CONCAT('RQ' , IFNULL(DATE_FORMAT(CURDATE(), '%Y%m%d'), '') , '_' , IFNULL(LPAD('1',5,'0'), '')))
					 ELSE (CONCAT('RQ' , IFNULL(DATE_FORMAT(CURDATE(), '%Y%m%d'), '') , '_' , IFNULL(LPAD(SUBSTR(MAX(REQ_ID), 12, 5)+1, 5, '0'), '')))
			END ) REQ_ID
		FROM T_WLK_MNG_REQ
		WHERE ALRM_ID LIKE CONCAT('RQ' , IFNULL(DATE_FORMAT(CURDATE(), '%Y%m%d'), '') , '%')
	</select>

	<select id="selectMaxTrkId"  parameterType="String" resultType="String">
		SELECT (CASE WHEN IFNULL(MAX(TRK_ID),0) = '0'
						 then (CONCAT('TR' , IFNULL(DATE_FORMAT(CURDATE(), '%Y%m%d'), '') , '_' , IFNULL(LPAD('1',5,'0'), '')))
					 ELSE (CONCAT('TR' , IFNULL(DATE_FORMAT(CURDATE(), '%Y%m%d'), '') , '_' , IFNULL(LPAD(SUBSTR(MAX(TRK_ID), 12, 5)+1, 5, '0'), '')))
			END ) TRK_ID
		FROM T_WLK_MNG_TRK
		WHERE ALRM_ID LIKE CONCAT('TR' , IFNULL(DATE_FORMAT(CURDATE(), '%Y%m%d'), '') , '%')
	</select>

	<insert id="insertUserRequest" parameterType="userRequestVO">
		INSERT INTO T_WLK_MNG_REQ (REQ_ID, USER_ID, REQ_TP, REQ_STT, REQ_DT, REGIST_DT, REGIST_ID, UPT_DT, UPT_ID)
		VALUES (#{reqId}, #{userId}, #{reqTp}, '0', #{reqDt}, SYSDATE(), #{userId}, SYSDATE(), #{userId})
	</insert>

	<insert id="insertHealthAlert" parameterType="healthAlertVO">
		INSERT INTO T_WLK_MNG_ALT (TRK_ID, USER_ID, ALT_TP, DCT_DT, ALT_RMRK, REGIST_DT, REGIST_ID, UPT_DT, UPT_ID)
		VALUES (#{trkId}, #{userId}, #{altTp}, #{dctDt}, #{altRmrk}, SYSDATE(), #{userId}, SYSDATE(), #{userId})
	</insert>

	<select id="selectUserRequest" parameterType="userRequestVO" resultType="userRequestVO">
		select req.USER_ID, req.REQ_TP, req.REQ_STT, req.REQ_DT, my.USER_NM, my.MOBILE, my.EMAIL_ID, my.BRTH_DT, my.SX, my.GRP_ID, grp.GRP_NM,
			(SELECT ic.USER_NM
			FROM T_WLK_MNG_USER ic
			WHERE ic.USER_ID = my.IN_CHARGE_ID
			) as IN_CHARGE_NM, my.IN_CHARGE_ID
		from t_wlk_mng_req req
			left outer join t_wlk_my my on req.user_id = my.user_id
			inner join t_wlk_mng_user admin on admin.user_id = my.IN_CHARGE_ID
			inner join t_wlk_mng_grp grp on grp.GRP_ID = admin.GRP_ID
		where 1=1
		<if test="inChargeIds != null and inChargeIds != ''">
			-- 담당자에 맞는 조회
		  		-- 상위 담당자인 경우, 하위 담당자들의 USER_ID를 조회 시에 전부 넣어주고,
		  		-- 하위 담당자(고객 바로 상위)의 경우, 본인의 USER_ID를 넣어서 조회한다.
			AND my.IN_CHARGE_ID IN ${inChargeIds}
		</if>
		<if test="searchBgnDe != null and searchBgnDe != ''">
			AND req.REQ_DT <![CDATA[>=]]> #{searchBgnDe}
		</if>
		<if test="searchEndDe != null and searchEndDe != ''">
			AND req.REQ_DT <![CDATA[<=]]> #{searchEndDe}
		</if>
		<if test="reqTp != null and reqTp != ''">
			AND req.REQ_TP IN (${reqTp})
		</if>
		<if test="userNm != null and userNm != ''">
			AND my.USER_NM = #{userNm}
		</if>
		<if test="emailId != null and emailId != ''">
			AND my.EMAIL_ID LIKE CONCAT('%',#{emailId},'%')
		</if>
		<if test="userId != null and userId != ''">
			AND my.USER_ID LIKE CONCAT('%',#{userId},'%')
		</if>
		<if test="mobile != null and mobile != ''">
			AND my.MOBILE = #{mobile}
		</if>
		<if test="sx != null and sx != '' and sx != 'ALL'">
			AND my.SX = #{sx}
		</if>
		<if test="brthDt != null and brthDt != ''">
			AND my.BRTH_DT = #{brthDt}
		</if>
		<if test="inChargeId != null and inChargeId != ''">
			AND my.IN_CHARGE_ID = #{inChargeId}
		</if>
		<if test="inChargeNm != null and inChargeNm != ''">
			AND admin.USER_NM = #{inChargeNm}
		</if>
		<if test="grpNm != null and grpNm != ''">
			AND grp.GRP_NM LIKE CONCAT('%',#{grpNm},'%')
		</if>
		ORDER BY
		<choose>
			<when test='sidx == "reqDt"'>
				req.REQ_DT
			</when>
			<when test='sidx == "reqTp"'>
				req.REQ_TP
			</when>
			<when test='sidx == "userId"'>
				my.USER_ID
			</when>
			<when test='sidx == "sx"'>
				my.SX
			</when>
			<when test='sidx == "grpNm"'>
				grp.GRP_NM
			</when>
			<otherwise>
				req.REQ_DT
			</otherwise>
		</choose>
		<choose>
			<when test='sord == "DESC" or sord == "desc"'>
				DESC
			</when>
			<otherwise>
				ASC
			</otherwise>
		</choose>
		LIMIT #{rowNo}, #{rows}
	</select>
	<select id="selectUserRequestCnt" parameterType="userRequestVO" resultType="int">
		select count(req.REQ_ID)
		from t_wlk_mng_req req
			left outer join t_wlk_my my on req.user_id = my.user_id
			inner join t_wlk_mng_user admin on admin.user_id = my.IN_CHARGE_ID
			inner join t_wlk_mng_grp grp on grp.GRP_ID = admin.GRP_ID
		where 1=1
		<if test="inChargeIds != null and inChargeIds != ''">
			-- 담당자에 맞는 조회
			-- 상위 담당자인 경우, 하위 담당자들의 USER_ID를 조회 시에 전부 넣어주고,
			-- 하위 담당자(고객 바로 상위)의 경우, 본인의 USER_ID를 넣어서 조회한다.
			AND my.IN_CHARGE_ID IN ${inChargeIds}
		</if>
		<if test="searchBgnDe != null and searchBgnDe != ''">
			AND req.REQ_DT <![CDATA[>=]]> #{searchBgnDe}
		</if>
		<if test="searchEndDe != null and searchEndDe != ''">
			AND req.REQ_DT <![CDATA[<=]]> #{searchEndDe}
		</if>
		<if test="reqTp != null and reqTp != ''">
			AND req.REQ_TP IN (${reqTp})
		</if>
		<if test="userNm != null and userNm != ''">
			AND my.USER_NM = #{userNm}
		</if>
		<if test="emailId != null and emailId != ''">
			AND my.EMAIL_ID LIKE CONCAT('%',#{emailId},'%')
		</if>
		<if test="userId != null and userId != ''">
			AND my.USER_ID LIKE CONCAT('%',#{userId},'%')
		</if>
		<if test="mobile != null and mobile != ''">
			AND my.MOBILE = #{mobile}
		</if>
		<if test="sx != null and sx != '' and sx != 'ALL'">
			AND my.SX = #{sx}
		</if>
		<if test="brthDt != null and brthDt != ''">
			AND my.BRTH_DT = #{brthDt}
		</if>
		<if test="inChargeId != null and inChargeId != ''">
			AND my.IN_CHARGE_ID = #{inChargeId}
		</if>
		<if test="inChargeNm != null and inChargeNm != ''">
			AND admin.USER_NM = #{inChargeNm}
		</if>
		<if test="grpNm != null and grpNm != ''">
			AND grp.GRP_NM LIKE CONCAT('%',#{grpNm},'%')
		</if>
		ORDER BY
		<choose>
			<when test='sidx == "reqDt"'>
				req.REQ_DT
			</when>
			<when test='sidx == "reqTp"'>
				req.REQ_TP
			</when>
			<when test='sidx == "userId"'>
				my.USER_ID
			</when>
			<when test='sidx == "sx"'>
				my.SX
			</when>
			<when test='sidx == "grpNm"'>
				grp.GRP_NM
			</when>
			<otherwise>
				req.REQ_DT
			</otherwise>
		</choose>
		<choose>
			<when test='sord == "DESC" or sord == "desc"'>
				DESC
			</when>
			<otherwise>
				ASC
			</otherwise>
		</choose>
	</select>

	<select id="selectHealthAlert" parameterType="healthAlertVO" resultType="healthAlertVO">
		select alt.USER_ID, alt.ALT_TP, alt.ALT_RMRK, alt.DCT_DT, my.USER_NM, my.MOBILE, my.EMAIL_ID, my.BRTH_DT, my.SX, my.GRP_ID, grp.GRP_NM,
			(SELECT ic.USER_NM
			FROM T_WLK_MNG_USER ic
			WHERE ic.USER_ID = my.IN_CHARGE_ID
			) as IN_CHARGE_NM, my.IN_CHARGE_ID
		from t_wlk_mng_alt alt
			left outer join t_wlk_my my on alt.user_id = my.user_id
			inner join t_wlk_mng_user admin on admin.user_id = my.IN_CHARGE_ID
			inner join t_wlk_mng_grp grp on grp.GRP_ID = admin.GRP_ID
		where 1=1
		<if test="inChargeIds != null and inChargeIds != ''">
			-- 담당자에 맞는 조회
			-- 상위 담당자인 경우, 하위 담당자들의 USER_ID를 조회 시에 전부 넣어주고,
			-- 하위 담당자(고객 바로 상위)의 경우, 본인의 USER_ID를 넣어서 조회한다.
			AND my.IN_CHARGE_ID IN ${inChargeIds}
		</if>
		<if test="searchBgnDe != null and searchBgnDe != ''">
			AND alt.DCT_DT <![CDATA[>=]]> #{searchBgnDe}
		</if>
		<if test="searchEndDe != null and searchEndDe != ''">
			AND alt.DCT_DT <![CDATA[<=]]> #{searchEndDe}
		</if>
		<if test="altTp != null and altTp != ''">
			AND alt.ALT_TP IN (${altTp})
		</if>
		<if test="userNm != null and userNm != ''">
		  	AND my.USER_NM = #{userNm}
		</if>
		<if test="emailId != null and emailId != ''">
			AND my.EMAIL_ID LIKE CONCAT('%',#{emailId},'%')
		</if>
		<if test="userId != null and userId != ''">
			AND my.USER_ID LIKE CONCAT('%',#{userId},'%')
		</if>
		<if test="mobile != null and mobile != ''">
			AND my.MOBILE = #{mobile}
		</if>
		<if test="sx != null and sx != '' and sx != 'ALL'">
			AND my.SX = #{sx}
		</if>
		<if test="brthDt != null and brthDt != ''">
			AND my.BRTH_DT = #{brthDt}
		</if>
		<if test="inChargeId != null and inChargeId != ''">
			AND my.IN_CHARGE_ID = #{inChargeId}
		</if>
		<if test="inChargeNm != null and inChargeNm != ''">
			AND admin.USER_NM = #{inChargeNm}
		</if>
		<if test="grpNm != null and grpNm != ''">
			AND grp.GRP_NM LIKE CONCAT('%',#{grpNm},'%')
		</if>
		ORDER BY
		<choose>
			<when test='sidx == "dctDt"'>
				alt.DCT_DT
			</when>
			<when test='sidx == "altTp"'>
				alt.ALT_TP
			</when>
			<when test='sidx == "userId"'>
				my.USER_ID
			</when>
			<when test='sidx == "sx"'>
				my.SX
			</when>
			<when test='sidx == "grpNm"'>
				grp.GRP_NM
			</when>
			<otherwise>
				alt.DCT_DT
			</otherwise>
		</choose>
		<choose>
			<when test='sord == "DESC" or sord == "desc"'>
				DESC
			</when>
			<otherwise>
				ASC
			</otherwise>
		</choose>
		LIMIT #{rowNo}, #{rows}
	</select>

	<select id="selectHealthAlertCnt" parameterType="healthAlertVO" resultType="int">
		select count(alt.TRK_ID)
		from t_wlk_mng_alt alt
			left outer join t_wlk_my my on alt.user_id = my.user_id
			inner join t_wlk_mng_user admin on admin.user_id = my.IN_CHARGE_ID
			inner join t_wlk_mng_grp grp on grp.GRP_ID = admin.GRP_ID
		where 1=1
		<if test="inChargeIds != null and inChargeIds != ''">
			-- 담당자에 맞는 조회
			-- 상위 담당자인 경우, 하위 담당자들의 USER_ID를 조회 시에 전부 넣어주고,
			-- 하위 담당자(고객 바로 상위)의 경우, 본인의 USER_ID를 넣어서 조회한다.
			AND my.IN_CHARGE_ID IN ${inChargeIds}
		</if>
		<if test="searchBgnDe != null and searchBgnDe != ''">
			AND alt.DCT_DT <![CDATA[>=]]> #{searchBgnDe}
		</if>
		<if test="searchEndDe != null and searchEndDe != ''">
			AND alt.DCT_DT <![CDATA[<=]]> #{searchEndDe}
		</if>
		<if test="altTp != null and altTp != ''">
			AND alt.ALT_TP IN (${altTp})
		</if>
		<if test="userNm != null and userNm != ''">
			AND my.USER_NM = #{userNm}
		</if>
		<if test="emailId != null and emailId != ''">
			AND my.EMAIL_ID LIKE CONCAT('%',#{emailId},'%')
		</if>
		<if test="userId != null and userId != ''">
			AND my.USER_ID LIKE CONCAT('%',#{userId},'%')
		</if>
		<if test="mobile != null and mobile != ''">
			AND my.MOBILE = #{mobile}
		</if>
		<if test="sx != null and sx != '' and sx != 'ALL'">
			AND my.SX = #{sx}
		</if>
		<if test="brthDt != null and brthDt != ''">
			AND my.BRTH_DT = #{brthDt}
		</if>
		<if test="inChargeId != null and inChargeId != ''">
			AND my.IN_CHARGE_ID = #{inChargeId}
		</if>
		<if test="inChargeNm != null and inChargeNm != ''">
			AND admin.USER_NM = #{inChargeNm}
		</if>
		<if test="grpNm != null and grpNm != ''">
			AND grp.GRP_NM LIKE CONCAT('%',#{grpNm},'%')
		</if>
		ORDER BY
		<choose>
			<when test='sidx == "dctDt"'>
				alt.DCT_DT
			</when>
			<when test='sidx == "altTp"'>
				alt.ALT_TP
			</when>
			<when test='sidx == "userId"'>
				my.USER_ID
			</when>
			<when test='sidx == "sx"'>
				my.SX
			</when>
			<when test='sidx == "grpNm"'>
				grp.GRP_NM
			</when>
			<otherwise>
				alt.DCT_DT
			</otherwise>
		</choose>
		<choose>
			<when test='sord == "DESC" or sord == "desc"'>
				DESC
			</when>
			<otherwise>
				ASC
			</otherwise>
		</choose>
	</select>

	<select id="selectTodayHealthAlertCnt" resultType="java.util.Map" parameterType="java.util.Map">
		-- 담당자가 조회하는 경우, 전체 관리자가 조회하는 경우에 대한 분기처리가 필요
		<choose>
			<when test="grpId != null and grpId != ''">
				WITH RECURSIVE sub_groups AS (
				SELECT GRP_ID FROM T_WLK_MNG_GRP WHERE GRP_ID = #{grpId}
				UNION ALL
				SELECT g.GRP_ID FROM T_WLK_MNG_GRP g
				INNER JOIN sub_groups sg on g.PGRP_ID = sg.GRP_ID
				)
				select alt.ALT_TP, COUNT(*) as ALT_COUNT
				from t_wlk_mng_alt alt
				inner join t_wlk_my my on alt.user_id = my.user_id
				inner join t_wlk_mng_user admin on my.IN_CHARGE_ID = admin.USER_ID
				WHERE ALT.DCT_DT >= #{today} and admin.GRP_ID in (select * from sub_groups)
			</when>
			<when test="inChargeId != null and inChargeId != ''">
				select alt.ALT_TP, COUNT(*) as ALT_COUNT
				from t_wlk_mng_alt alt
					inner join t_wlk_my my on alt.user_id = my.user_id
				WHERE ALT.DCT_DT >= #{today} AND my.IN_CHARGE_ID = #{inChargeId}
			</when>
		</choose>
		group by ALT_TP
	</select>

	<select id="selectTodayUserRequestCnt" resultType="java.util.Map" parameterType="java.util.Map">
		<choose>
			<when test="grpId != null and grpId != ''">
				WITH RECURSIVE sub_groups AS (
				SELECT GRP_ID FROM T_WLK_MNG_GRP WHERE GRP_ID = #{grpId}
				UNION ALL
				SELECT g.GRP_ID FROM T_WLK_MNG_GRP g
				INNER JOIN sub_groups sg on g.PGRP_ID = sg.GRP_ID
				)
				select req.REQ_TP, req.REQ_STT, COUNT(*) as REQ_COUNT
				from t_wlk_mng_req req
				inner join t_wlk_my my on req.user_id = my.user_id
				inner join t_wlk_mng_user admin on my.IN_CHARGE_ID = admin.USER_ID
				WHERE REQ.REQ_DT >= #{today} and admin.GRP_ID in (select * from sub_groups)
			</when>
			<when test="inChargeId != null and inChargeId != ''">
				select req.REQ_TP, req.REQ_STT, COUNT(*) AS REQ_COUNT
				from t_wlk_mng_req req
					inner join t_wlk_my my on req.user_id = my.user_id
					inner join t_wlk_mng_grp grp on my.grp_id = grp.grp_id
				WHERE REQ.REQ_DT >= #{today} AND my.IN_CHARGE_ID = #{inChargeId}
			</when>
		</choose>
		GROUP BY REQ_TP, REQ_STT
		ORDER BY REQ_TP, REQ_STT
	</select>
</mapper>