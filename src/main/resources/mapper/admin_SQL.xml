<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="admin">
    <!-- 사용자 목록 -->
    <select id="selectAdminList" parameterType="userVO" resultType="userVO">
        SELECT  SQL_CALC_FOUND_ROWS
        UID, USER_ID, USER_NM, EMAIL_ADDR, PHONE_NO, DATE_FORMAT(LOGIN_DT, '%Y-%m-%d %T') AS LOGIN_DT, LOGIN_YN, DEPT_NM, LOCK_YN, LOCK_YN AS oldLockYn, USE_YN,
        USER_TYPE, USER_DESC, REGIST_ID, DATE_FORMAT(REGIST_DT, '%Y-%m-%d %T') AS REGIST_DT, MODIFY_ID, DATE_FORMAT(MODIFY_DT, '%Y-%m-%d %T') AS MODIFY_DT,
        CONNECT_IP1, CONNECT_IP2, CONNECT_IP3, USERGROUP_ID, WRK_TP, LST_LOGIN_DT, TP_NM
        FROM T_WLK_MNG_USER
        <where>
            <if test='userId != null and userId != "" '>
                AND USER_ID LIKE CONCAT('%', #{userId}, '%')
            </if>
            <if test='userNm != null and userNm != "" '>
                AND USER_NM LIKE CONCAT('%', #{userNm}, '%')
            </if>
            <if test='phoneNo != null and phoneNo != "" '>
                AND PHONE_NO LIKE CONCAT('%', #{phoneNo}, '%')
            </if>
            <if test='tpNm != null and tpNm != "" '>
                AND TP_NM = #{tpNm}
            </if>
        </where>
        ORDER BY
        <choose>
            <when test='sortColumn == "userId"'>
                USER_ID
            </when>
            <when test='sortColumn == "userNm"'>
                USER_NM
            </when>
            <when test='sortColumn == "tpNm"'>
                TP_NM
            </when>
            <when test='sortColumn == "loginDt"'>
                LOGIN_DT
            </when>
            <when test='sortColumn == "registDt"'>
                REGIST_DT
            </when>
            <otherwise>
                USER_ID
            </otherwise>
        </choose>
        <choose>
            <when test='sord == "DESC" or sord == "desc"'>
                DESC
            </when>
            <otherwise>
                ASC
            </otherwise>
        </choose>
        LIMIT #{rowNo}, #{rows}
    </select>

    <!-- User 목록 total -->
    <select id="selectTotalRecords" resultType="int">
        SELECT FOUND_ROWS();
    </select>

    <!-- 사용자 상세 - USER_ID -->
    <select id="selectAdminInfo" parameterType="String" resultType="userVO">
        SELECT UID, USER_ID, USER_NM, USER_PW, EMAIL_ADDR, PHONE_NO, LOGIN_DT, LOGIN_YN, DEPT_NM, USERGROUP_ID, LOCK_YN, USE_YN, USER_TYPE, USER_DESC, REGIST_ID, REGIST_DT, MODIFY_ID, MODIFY_DT,
               CONNECT_IP1, CONNECT_IP2, CONNECT_IP3, USERGROUP_ID, WRK_TP
        FROM   T_WLK_MNG_USER
        WHERE  USER_ID = #{userId}
    </select>

    <!-- 사용자 상세 - UID -->
    <select id="selectAdminInfoByUid" parameterType="String" resultType="userVO">
        SELECT UID, USER_ID, USER_NM, USER_PW, EMAIL_ADDR, PHONE_NO, LOGIN_DT, LOGIN_YN, DEPT_NM, USERGROUP_ID, LOCK_YN, USE_YN, USER_TYPE, USER_DESC, REGIST_ID, REGIST_DT, MODIFY_ID, MODIFY_DT,
               CONNECT_IP1, CONNECT_IP2, CONNECT_IP3, USERGROUP_ID, WRK_TP
        FROM   T_WLK_MNG_USER
        WHERE  UID = #{uid}
    </select>

    <!-- 사용자 확인 -->
    <select id="selectAdminIdCnt" parameterType="String" resultType="int">
        SELECT COUNT(USER_ID) AS CNT
        FROM   T_WLK_MNG_USER
        WHERE  USER_ID = #{userId}
    </select>

    <!-- 사용자 확인  - 사용자 그룹 아이디 -->
    <select id="selectAdminCntByUserGroupId" parameterType="String" resultType="int">
        SELECT COUNT(USER_ID) AS CNT
        FROM   T_WLK_MNG_USER
        WHERE  USERGROUP_ID = #{userGroupId}
    </select>

    <!-- 사용자 등록 -->
    <insert id="insertAdmin" useGeneratedKeys="true" keyProperty="uid" parameterType="userVO">
        INSERT INTO t_wlk_MNG_USER
        (
        UID, USER_ID, USER_NM, USER_PW, EMAIL_ADDR, PHONE_NO, LOGIN_YN, DEPT_NM, GRP_ID, GRP_LV, TP_NM, LOCK_YN, USE_YN, USER_TYPE,
        USER_DESC, REGIST_ID, REGIST_DT, MODIFY_ID, MODIFY_DT, PW_MODIFY_DT, CONNECT_IP1, CONNECT_IP2, CONNECT_IP3, USERGROUP_ID, WRK_TP
        )
        VALUES
        (
        #{uid}, #{userId}, #{userNm}, #{userPw}, #{emailAddr}, #{phoneNo, jdbcType=VARCHAR}, 'Y', #{deptNm, jdbcType=VARCHAR}, #{grpId}, #{grpLv}, #{tpNm},

        <choose>
            <when test='lockYn != null and lockYn !=""'>
                #{lockYn},
            </when>
            <otherwise>
                'N',
            </otherwise>
        </choose>
        #{useYn}, #{userType}, #{userDesc, jdbcType=VARCHAR}, #{registId}, NOW(), #{modifyId}, NOW(), NOW(), #{connectIp1}, #{connectIp2}, #{connectIp3},
        <choose>
            <when test='usergroupId == "null" or usergroupId == ""'>
                null
            </when>
            <otherwise>
                #{usergroupId, jdbcType=VARCHAR}
            </otherwise>
        </choose>
        , #{wrkTp}
        )
    </insert>

    <!-- 사용자 수정 -->
    <update id="updateAdmin" parameterType="userVO">
        UPDATE T_WLK_MNG_USER
        SET
        USER_NM 	= #{userNm},
        <if test='userPw != null and userPw !=""'>
            USER_PW 	= #{userPw},
            PW_MODIFY_DT = NOW(),
        </if>
        EMAIL_ADDR	= #{emailAddr},
        PHONE_NO	= #{phoneNo, jdbcType=VARCHAR},
        DEPT_NM 	= #{deptNm},
        <if test='userType != null and userType !=""'>
            USER_TYPE 	= #{userType},
        </if>

        <if test='useYn != null and useYn !=""'>
            USE_YN 		= #{useYn},
        </if>
        <choose>
            <when test='usergroupId == "null" or usergroupId == ""'>
                USERGROUP_ID = null,
            </when>
            <otherwise>
                USERGROUP_ID = #{usergroupId, jdbcType=VARCHAR},
            </otherwise>
        </choose>
        <if test='lockYn != null and lockYn !=""'>
            LOCK_YN 	= #{lockYn},
        </if>

        <if test='lockYn.equals("N")'>
            PW_FAIL_CNT = 0,
        </if>

        <if test='oldLockYn.equals("C")'>
            LOGIN_DT	= NOW(),
        </if>
        USER_DESC	= #{userDesc, jdbcType=VARCHAR},
        WRK_TP      = #{wrkTp},
        MODIFY_ID	= #{modifyId},
        MODIFY_DT	= NOW(),
        CONNECT_IP1 = #{connectIp1},
        CONNECT_IP2 = #{connectIp2},
        CONNECT_IP3 = #{connectIp3}
        WHERE USER_ID   = #{userId}
    </update>

    <!-- 사용자 수정 - 사용자 그룹 -->
    <update id="updateAdminGroupId" parameterType="userVO">
        UPDATE T_WLK_MNG_USER
        SET
            USERGROUP_ID	= #{usergroupId, jdbcType=VARCHAR},
            MODIFY_ID		= #{modifyId},
            MODIFY_DT		= NOW()
        WHERE UID = #{uid}
    </update>

    <!-- 사용자 삭제 -->
    <delete id="deleteAdmin" parameterType="String">
        DELETE FROM T_WLK_MNG_USER
        WHERE UID != 'USR_000000000000' AND UID = #{uid}
    </delete>

    <!-- 사용자 목록 삭제 -->
    <delete id="deleteAdminList" parameterType="java.util.List">
        DELETE FROM T_WLK_MNG_USER
        WHERE UID IN <foreach item="id" collection="list" open="(" separator="," close=")">#{id}</foreach>
    </delete>

    <!-- 사용자 전체 목록 조회 -->
    <select id="selectAdminByUseAllList" resultType="userVO">
        SELECT  UID, USER_ID, USER_NM, USER_PW, EMAIL_ADDR, PHONE_NO, LOGIN_DT, LOGIN_YN, DEPT_NM, LOCK_YN, USE_YN, USER_TYPE, USER_DESC,
                REGIST_ID, DATE_FORMAT(REGIST_DT, '%Y-%m-%d %T') AS REGIST_DT, MODIFY_ID, DATE_FORMAT(MODIFY_DT, '%Y-%m-%d %T') AS MODIFY_DT,
                CONNECT_IP1, CONNECT_IP2, CONNECT_IP3, USERGROUP_ID, WRK_TP
        FROM    T_WLK_MNG_USER
        WHERE   USE_YN  = 'Y'
          AND   LOCK_YN = 'N'
    </select>

    <select id="selectAdminInfoDetail" parameterType="String" resultType="userVO">
        SELECT
            mngUser.UID, mngUser.USER_ID, mngUser.USER_NM, mngUser.USER_PW, mngUser.EMAIL_ADDR, mngUser.PHONE_NO, mngUser.LOGIN_DT,
            mngUser.LOGIN_YN, mngUser.DEPT_NM, mngUser.LOCK_YN, mngUser.USE_YN, mngUser.USER_TYPE, mngUser.USER_DESC,
            mngUser.REGIST_ID, mngUser.REGIST_DT,mngUser.MODIFY_ID, mngUser.MODIFY_DT,  mngUser.CONNECT_IP1, mngUser.CONNECT_IP2, mngUser.CONNECT_IP3,
            mngUser.USERGROUP_ID, mngUser.WRK_TP, userGroup.USERGROUP_NM AS userGroupNm, mngCode.CODE_NAME AS wrkNm
        FROM  T_WLK_MNG_USER mngUser
              LEFT OUTER JOIN T_WLK_MNG_USERGROUP userGroup ON mngUser.USERGROUP_ID = userGroup.USERGROUP_ID
              LEFT OUTER JOIN T_WLK_MNG_CODE mngCode ON  mngUser.WRK_TP = mngCode.CODE AND mngCode.P_CODE = 'WK00'
        WHERE mngUser.USER_ID = #{userId}
    </select>

    <!-- 사용자 전체 목록 조회 -->
    <select id="selectManagerGroupList" resultType="java.util.Map" parameterType="String">
        WITH RECURSIVE CTE AS (
            SELECT GRP_ID,
                   PGRP_ID,
                   GRP_NM,
                   1 AS LEVEL
            FROM T_WLK_MNG_GRP
            WHERE GRP_ID = #{grpId}
            UNION ALL
            SELECT P.GRP_ID,
                   P.PGRP_ID,
                   P.GRP_NM,
                   1 + LEVEL AS LEVEL
            FROM T_WLK_MNG_GRP P
                     INNER JOIN CTE ON P.PGRP_ID = CTE.GRP_ID
        )
        SELECT GRP_ID,
               GRP_NM,
               LEVEL AS IP_GRP_LEVEL
        FROM CTE
        where 1=1
          and LEVEL = 2
    </select>

    <update id="updateAdminInfo" parameterType="userVO">
        UPDATE T_WLK_MNG_USER
        SET
        USER_NM 	  = #{userNm},
        PHONE_NO	  = #{phoneNo, jdbcType=VARCHAR},
        GRP_ID        = #{grpId},
        GRP_LV        = #{grpLv},
        TP_NM         = #{tpNm},
        MODIFY_ID	  = #{modifyId},
        MODIFY_DT	  = NOW()
        WHERE USER_ID = #{userId}
    </update>

    <delete id="adminDelete" parameterType="java.util.List">
        DELETE FROM T_WLK_MNG_USER
        <where>
            <foreach collection="list" item="item" open="" close="" separator="OR">
                (UID = #{item.uid})
            </foreach>
        </where>
    </delete>

</mapper>