<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="menu">
	<!-- 메뉴 목록  - 관리자 -->
	<!-- 원본 주석 처리 22.08.22
	<select id="selectMenuList" parameterType="Boolean" resultType="menuVO">
		WITH RECURSIVE CTE AS (
			SELECT MENU_ID, P_MENU_ID, MENU_NM, 1 AS LEVEL, MENU_NM AS MENU_PATH, ORDER_NO, MENU_URL, USE_YN, MENU_ICON_NM
			FROM t_wlk_MNG_MENU 
			WHERE P_MENU_ID IS NULL 
			UNION ALL
			SELECT D.MENU_ID, D.P_MENU_ID, D.MENU_NM, 1 + LEVEL AS LEVEL, CONCAT(CTE.MENU_PATH, ',', CONCAT(LENGTH(IFNULL(D.ORDER_NO, 0)), IFNULL(D.ORDER_NO, 0)), D.MENU_NM) AS MENU_PATH, D.ORDER_NO, D.MENU_URL, D.USE_YN, D.MENU_ICON_NM
			FROM t_wlk_MNG_MENU D
			INNER JOIN CTE ON D.P_MENU_ID = CTE.MENU_ID AND D.USE_YN = 'Y'
			<if test="!value">
				AND D.MENU_ID != 'MNU_000000000006'
			</if>
		)
		 -->
		<!-- SELECT MENU_ID, IFNULL(P_MENU_ID, 0) AS P_MENU_ID, MENU_NM, MENU_PATH, LEVEL AS MENU_LEVEL, ORDER_NO, MENU_URL, USE_YN, MENU_ICON_NM, PERMISSION -->
		<!--  
		SELECT MENU_ID, MENU_NM, LEVEL AS MENU_LEVEL, P_MENU_ID, MENU_URL, MENU_ICON_NM, 11 PERMISSION, ORDER_NO
		FROM CTE
		WHERE LEVEL != 1
		ORDER BY MENU_PATH, ORDER_NO
	</select>
	-->
	<!-- 메뉴 리스트 조회 쿼리 수정 22.08.22 -->
	<select id="selectMenuList" parameterType="Boolean" resultType="menuVO">
		WITH RECURSIVE CTE AS (
			SELECT MENU_ID, P_MENU_ID AS PAR_MENU_ID, MENU_NM, 1 AS LEVEL, MENU_NM AS MENU_PATH, ORDER_NO, MENU_URL, USE_YN, MENU_ICON_NM
			FROM t_wlk_mng_menu 
			WHERE P_MENU_ID IS NULL 
			UNION ALL
			SELECT D.MENU_ID, D.P_MENU_ID, D.MENU_NM, 1 + LEVEL AS LEVEL, CONCAT(CTE.MENU_PATH, ',', CONCAT(LENGTH(IFNULL(D.ORDER_NO, 0)), IFNULL(D.ORDER_NO, 0)), D.MENU_NM) AS MENU_PATH, D.ORDER_NO, D.MENU_URL, D.USE_YN, D.MENU_ICON_NM
			FROM t_wlk_mng_menu D
			INNER JOIN CTE ON D.P_MENU_ID = CTE.MENU_ID AND D.USE_YN = 'Y'
		)
		SELECT A.MENU_ID, MENU_NM, LEVEL AS MENU_LEVEL, PAR_MENU_ID, MENU_URL, MENU_ICON_NM, IF(AA.USERGROUP_ID='UGP_000000000000', TRUE, FALSE) AS UNSELECTABLE_STATUS
			, IF(ISNULL(AA.MENU_ID), 'N', 'Y') AS ACCESS_YN, ORDER_NO, DATE_FORMAT(REGIST_DT, '%Y-%m-%d %T') AS REGIST_DT
		FROM CTE A
		LEFT JOIN t_wlk_mng_usergroup_menu AA ON A.MENU_ID = AA.MENU_ID AND USERGROUP_ID = 'UGP_000000000000'
		WHERE LEVEL != 1
		ORDER BY MENU_PATH, ORDER_NO
	</select>
	
	<!-- 메뉴  권한 목록 관리  - 유저관리페이지 추가 22.08.22 -->
	<select id="selectMenuListPermission" parameterType="String" resultType="menuVO">
		WITH RECURSIVE CTE AS (
			SELECT MENU_ID, P_MENU_ID AS PAR_MENU_ID, MENU_NM, 1 AS LEVEL, MENU_NM AS MENU_PATH, ORDER_NO, MENU_URL, USE_YN, MENU_ICON_NM
			FROM t_wlk_mng_menu 
			WHERE P_MENU_ID IS NULL 
			UNION ALL
			SELECT D.MENU_ID, D.P_MENU_ID, D.MENU_NM, 1 + LEVEL AS LEVEL, CONCAT(CTE.MENU_PATH, ',', CONCAT(LENGTH(IFNULL(D.ORDER_NO, 0)), IFNULL(D.ORDER_NO, 0)), D.MENU_NM) AS MENU_PATH, D.ORDER_NO, D.MENU_URL, D.USE_YN, D.MENU_ICON_NM
			FROM t_wlk_mng_menu D
			INNER JOIN CTE ON D.P_MENU_ID = CTE.MENU_ID AND D.USE_YN = 'Y'
		)
		SELECT A.MENU_ID, MENU_NM, LEVEL AS MENU_LEVEL, PAR_MENU_ID, MENU_URL, MENU_ICON_NM, IF(AA.USERGROUP_ID='UGP_000000000000', TRUE, FALSE) AS UNSELECTABLE_STATUS
			, IF(ISNULL(AA.MENU_ID), 'N', 'Y') AS ACCESS_YN, IFNULL(PERMISSION, 'N') AS PERMISSION, ORDER_NO, DATE_FORMAT(REGIST_DT, '%Y-%m-%d %T') AS REGIST_DT
		FROM CTE A
		LEFT JOIN t_wlk_mng_usergroup_menu AA ON A.MENU_ID = AA.MENU_ID AND USERGROUP_ID = #{groupId}
		WHERE LEVEL != 1
		ORDER BY MENU_PATH, ORDER_NO
	</select>
	
	<!-- 메뉴 목록 - 운영자-->
	<select id="selectMenuListByGroup" parameterType="String" resultType="menuVO">
		SELECT MENU_ID, MENU_NM, MENU_LEVEL, P_MENU_ID AS PAR_MENU_ID, MENU_URL, MENU_ICON_NM, ORDER_NO, (DISP_PERMISSION + LINK_PERMISSION) AS PERMISSION
		FROM
		(
			WITH RECURSIVE CTE AS (
				SELECT MENU_ID, P_MENU_ID, MENU_NM, 1 AS LEVEL, MENU_NM AS MENU_PATH, ORDER_NO, MENU_URL, USE_YN, MENU_ICON_NM
				FROM t_wlk_MNG_MENU 
				WHERE P_MENU_ID IS NULL 
				UNION ALL 
				SELECT D.MENU_ID, D.P_MENU_ID, D.MENU_NM, 1 + LEVEL AS LEVEL, CONCAT(CTE.MENU_PATH, ',', CONCAT(LENGTH(IFNULL(D.ORDER_NO, 0)), IFNULL(D.ORDER_NO, 0)), D.MENU_NM) AS MENU_PATH, D.ORDER_NO, D.MENU_URL, D.USE_YN, D.MENU_ICON_NM
				FROM t_wlk_MNG_MENU D
				INNER JOIN CTE ON D.P_MENU_ID = CTE.MENU_ID AND D.USE_YN = 'Y'
			) 
			SELECT A.MENU_ID, A.MENU_NM, A.LEVEL AS MENU_LEVEL, A.P_MENU_ID, A.MENU_URL, A.MENU_PATH, A.MENU_ICON_NM, ORDER_NO, 
				IF(A.MENU_ID = C.P_MENU_ID, '10', '0') DISP_PERMISSION, IF(IFNULL(B.MENU_ID,  0) != '0', '11', '0') LINK_PERMISSION
			FROM CTE A 
			LEFT JOIN 
			(
				SELECT MENU_ID FROM t_wlk_MNG_USERGROUP_MENU WHERE USERGROUP_ID = #{groupId}
				AND MENU_ID NOT IN ('MNU_000000000015') -- , 'MNU_000000000016'
			) B ON A.MENU_ID = B.MENU_ID
			LEFT JOIN 
			(
				SELECT DISTINCT MM.P_MENU_ID
				FROM t_wlk_MNG_USERGROUP_MENU MGM LEFT JOIN t_wlk_MNG_MENU MM ON MGM.MENU_ID = MM.MENU_ID AND MGM.USERGROUP_ID = #{groupId}
			) C ON A.MENU_ID = C.P_MENU_ID
			WHERE LEVEL != 1
		) AA
		WHERE (DISP_PERMISSION + LINK_PERMISSION) != 0
		ORDER BY MENU_PATH, ORDER_NO
	</select>
	
	<!-- Menu Start Url-->
	<select id="selectMenuStartUrl" parameterType="String" resultType="String">
		SELECT MENU_URL
		FROM
		(
			SELECT MENU_ID, MENU_NM, MENU_LEVEL, P_MENU_ID, MENU_URL, MENU_ICON_NM, (DISP_PERMISSION + LINK_PERMISSION) AS PERMISSION
			FROM
			(
				WITH RECURSIVE CTE AS (
					SELECT MENU_ID, P_MENU_ID, MENU_NM, 1 AS LEVEL, MENU_NM AS MENU_PATH, ORDER_NO, MENU_URL, USE_YN, MENU_ICON_NM
					FROM t_wlk_MNG_MENU 
					WHERE IFNULL(P_MENU_ID, '') = ''
					UNION ALL 
					SELECT D.MENU_ID, D.P_MENU_ID, D.MENU_NM, 1 + LEVEL AS LEVEL, CONCAT(CTE.MENU_PATH, ',', IFNULL(D.ORDER_NO, 0), D.MENU_NM) AS MENU_PATH, D.ORDER_NO, D.MENU_URL, D.USE_YN, D.MENU_ICON_NM
					FROM t_wlk_MNG_MENU D
					INNER JOIN CTE ON D.P_MENU_ID = CTE.MENU_ID AND D.USE_YN = 'Y'
				) 
				SELECT A.MENU_ID, A.MENU_NM, A.LEVEL AS MENU_LEVEL, A.P_MENU_ID, A.MENU_URL, A.MENU_PATH, A.MENU_ICON_NM, 
					IF(A.MENU_ID = C.P_MENU_ID, '10', '0') DISP_PERMISSION, IF(IFNULL(B.MENU_ID,  0) != '0', '11', '0') LINK_PERMISSION
				FROM CTE A 
				LEFT JOIN 
				(
					SELECT MENU_ID FROM t_wlk_MNG_USERGROUP_MENU WHERE USERGROUP_ID = #{groupId}
				) B ON A.MENU_ID = B.MENU_ID
				LEFT JOIN 
				(
					SELECT DISTINCT MM.P_MENU_ID
					FROM t_wlk_MNG_USERGROUP_MENU MGM LEFT JOIN t_wlk_MNG_MENU MM ON MGM.MENU_ID = MM.MENU_ID AND MGM.USERGROUP_ID = #{groupId}
				) C ON A.MENU_ID = C.P_MENU_ID
				WHERE LEVEL != 1
			) AA
			WHERE (DISP_PERMISSION + LINK_PERMISSION) != 0
			ORDER BY MENU_PATH
		) BB
		WHERE IFNULL(MENU_URL, '') != ''
		LIMIT 1
	</select>
	
	<!-- 메뉴 목록 - 현재위치 및 3레벨 메뉴-->
	<select id="selectMenuListByPath" parameterType="java.util.Map" resultType="menuVO">
		WITH RECURSIVE CTE AS (
			SELECT MENU_ID, P_MENU_ID AS PAR_MENU_ID, MENU_NM, 1 AS MENU_LEVEL, MENU_NM AS MENU_PATH, ORDER_NO, MENU_URL, USE_YN, MENU_ICON_NM, MNG_MENU_ID
			FROM t_wlk_MNG_MENU 
			WHERE MENU_URL = #{url}
			UNION ALL
			SELECT D.MENU_ID, D.P_MENU_ID, D.MENU_NM, 1 + MENU_LEVEL AS MENU_LEVEL, CONCAT(CTE.MENU_PATH, ',', IFNULL(D.ORDER_NO, 0), D.MENU_NM) AS MENU_PATH, D.ORDER_NO, D.MENU_URL, D.USE_YN, D.MENU_ICON_NM,D.MNG_MENU_ID
			FROM t_wlk_MNG_MENU D
			INNER JOIN CTE ON D.MENU_ID = CTE.PAR_MENU_ID AND D.USE_YN = 'Y' AND D.P_MENU_ID IS NOT NULL
		)SELECT * FROM CTE
		UNION ALL
		SELECT MENU.MENU_ID, MENU.P_MENU_ID AS PAR_MENU_ID, MENU.MENU_NM, -1 AS MENU_LEVEL, MENU.MENU_NM AS MENU_PATH, MENU.ORDER_NO, MENU.MENU_URL, MENU.USE_YN, MENU.MENU_ICON_NM,MENU.MNG_MENU_ID
		FROM t_wlk_MNG_MENU MENU
		INNER JOIN t_wlk_MNG_USERGROUP_MENU GROUPMENU ON MENU.MENU_ID = GROUPMENU.MENU_ID AND USERGROUP_ID = #{usergroupId}
		WHERE P_MENU_ID = ( SELECT P_MENU_ID FROM t_wlk_MNG_MENU WHERE MENU_URL = #{url} ) AND USE_YN = 'Y'
		ORDER BY MENU_LEVEL DESC, ORDER_NO ASC
	</select>
	
	<!-- 메뉴 권한 확인 -->
	<select id="selectMenuIdCnt" parameterType="java.util.Map" resultType="int">
		SELECT	COUNT(A.MENU_ID) AS CNT
		FROM	t_wlk_MNG_MENU A, t_wlk_MNG_USERGROUP_MENU B
		WHERE	A.MENU_ID = B.MENU_ID
		<if test='menuUrl != "/ipInquiry/ipInquiry"'>
		AND		A.MENU_URL = #{menuUrl}
		</if>
		AND		B.USERGROUP_ID = #{groupId}
	</select>
	
	<!-- 그룹별 메뉴 권한 목록-->
	<select id="selectMenuIdByGroup" parameterType="String" resultType="menuVO">
		SELECT 	A.MENU_ID, A.P_MENU_ID AS PAR_MENU_ID, A.MENU_NM,  B.PERMISSION, DATE_FORMAT(B.REGIST_DT , '%Y-%m-%d %T') AS REGIST_DT
		FROM	t_wlk_MNG_MENU A, t_wlk_MNG_USERGROUP_MENU B
		WHERE 	A.MENU_ID = B.MENU_ID
		AND 	A.USE_YN = 'Y' 
		AND 	B.USERGROUP_ID = #{usergroupId}
	</select>
	
	<!-- 사용자그룹 메뉴권한 수정 -->
	<update id="updateUserGroupMenu" parameterType="java.util.Map">
		INSERT INTO t_wlk_MNG_USERGROUP_MENU 
		(
			USERGROUP_ID, MENU_ID, PERMISSION, REGIST_ID, REGIST_DT
		)
		VALUES 
		(
			#{usergroupId}, #{menuId}, #{permission}, #{registId}, NOW()
		)
		ON DUPLICATE KEY UPDATE
			PERMISSION = #{permission}, REGIST_ID = #{registId},  REGIST_DT = NOW();
	</update>
	
	<!-- 사용자그룹 메뉴권한 삭제 -->
	<delete id="deleteUserGroupMenu" parameterType="java.util.Map">
		DELETE FROM t_wlk_MNG_USERGROUP_MENU
		WHERE USERGROUP_ID = #{usergroupId}
		AND MENU_ID = #{menuId}
	</delete>
	
	<!-- 사용자그룹 메뉴권한 모두 삭제 22.08.23 -->
	<delete id="deleteUserGroupMenuAll" parameterType="java.util.Map">
		DELETE FROM t_wlk_MNG_USERGROUP_MENU
		WHERE USERGROUP_ID = #{usergroupId}		
	</delete>
	
	<!-- 권한에 의한 메뉴존재 확인 추가 22.09.01-->
	<select id="selectMenuIdCntByAuth" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(1) CNT
		FROM t_wlk_MNG_USER A
		INNER JOIN t_wlk_MNG_USERGROUP_MENU B ON A.UID  = B.USERGROUP_ID
		INNER JOIN t_wlk_MNG_MENU C ON B.MENU_ID = C.MENU_ID
		WHERE A.UID    =    #{groupId}
		AND B.PERMISSION   =    'Y'
		AND C.USE_YN       =    'Y'
		<if test='menuUrl != "/ipInquiry/ipInquiry"'>
		AND C.MENU_URL     LIKE CONCAT('%',#{menuUrl},'%')
		</if>
	</select>
</mapper>